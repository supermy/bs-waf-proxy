location /java {
  proxy_pass http://backendjava/;
}

location /myweb {
  proxy_pass http://backendjava/myweb;
}

location /dbtest {
  proxy_pass http://backendjava/dbtest;
}

default_type text/html;

location /session {
  content_by_lua '
  ngx.say("<html><body><a href=/start>Start the test</a>!</body></html>")
  ';
}
location /start {
  content_by_lua '
  local session = require "resty.session".start()
  session.data.name = "OpenResty Fan"
  session:save()
  ngx.say("<html><body>Session started. ",
  "<a href=/test>Check if it is working</a>!</body></html>")
  ';
}
location /test {
  content_by_lua '
  local session = require "resty.session".open()
  ngx.say("<html><body>Session was started by <strong>",
  session.data.name or "Anonymous",
  "</strong>! <a href=/destroy>Destroy the session</a>.</body></html>")
  ';
}
location /destroy {
  content_by_lua '
  local session = require "resty.session".start()
  session:destroy()
  ngx.say("<html><body>Session was destroyed. ",
  "<a href=/check>Is it really so</a>?</body></html>")
  ';
}
location /check {
  content_by_lua '
  local session = require "resty.session".open()
  ngx.say("<html><body>Session was really destroyed, you are known as ",
  "<strong>",
  session.data.name or "Anonymous",
  "</strong>! <a href=/>Start again</a>.</body></html>")
  ';
}


#webjars 缓存配置
add_header X-Proxy-Cache $upstream_cache_status;
location ~ ^/(assets|webjars)/ {
    proxy_cache one;

    proxy_cache_bypass  $http_cache_control;

    proxy_cache_key "$host$request_uri";
    proxy_cache_valid 200 30d;
    proxy_cache_valid 301 302 10m;
    proxy_cache_valid 404 1m;

    proxy_pass http://backendjava;
}